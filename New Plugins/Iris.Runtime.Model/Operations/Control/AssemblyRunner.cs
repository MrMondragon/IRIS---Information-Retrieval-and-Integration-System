///////////////////////////////////////////////////////////
//  AssemblyRunner.cs
//  Implementation of the Class AssemblyRunner
//  Generated by Enterprise Architect
//  Created on:      23-Jan-2007 21:53:00
//  Original author: Marcelo
///////////////////////////////////////////////////////////



using Iris.Runtime.Model.BaseObjects;
using BubbleRunner;
using SQLManipulator.Entities;
using System.Collections.Generic;

namespace Iris.Runtime.Model.Operations.Control
{
  public class AssemblyRunner : ControlOperation
  {

    public AssemblyRunner(Structure aStructure, string aName)
      : base(aStructure, 0, aName)
    {
      ctorParams = new List<object>();
      methodParams = new List<object>();
    }

    private string assemblyName;

    public string AssemblyName
    {
      get { return assemblyName; }
      set { assemblyName = value; }
    }

    private string className;

    public string ClassName
    {
      get { return className; }
      set { className = value; }
    }

    private string methodName;

    public string MethodName
    {
      get { return methodName; }
      set { methodName = value; }
    }


    private List<object> ctorParams;

    public List<object> CtorParams
    {
      get { return ctorParams; }
    }

    private List<object> methodParams;

    public List<object> MethodParams
    {
      get { return methodParams; }
    }

    protected override Entity doExecute()
    {
      object result = CodeRunner.RunAssembly(AssemblyName, ClassName, CtorParams.ToArray(), MethodName, MethodParams.ToArray());
      if (result is Entity)
        return (Entity) result;
      else
        return null;
    }
  }

}