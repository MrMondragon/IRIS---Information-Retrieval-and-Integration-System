//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WindowsFormsApplication4 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private SZJInternacaoDataTable tableSZJInternacao;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SZJInternacao"] != null)) {
                    base.Tables.Add(new SZJInternacaoDataTable(ds.Tables["SZJInternacao"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SZJInternacaoDataTable SZJInternacao {
            get {
                return this.tableSZJInternacao;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SZJInternacao"] != null)) {
                    base.Tables.Add(new SZJInternacaoDataTable(ds.Tables["SZJInternacao"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSZJInternacao = ((SZJInternacaoDataTable)(base.Tables["SZJInternacao"]));
            if ((initTable == true)) {
                if ((this.tableSZJInternacao != null)) {
                    this.tableSZJInternacao.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSZJInternacao = new SZJInternacaoDataTable();
            base.Tables.Add(this.tableSZJInternacao);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSZJInternacao() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SZJInternacaoRowChangeEventHandler(object sender, SZJInternacaoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SZJInternacaoDataTable : global::System.Data.TypedTableBase<SZJInternacaoRow> {
            
            private global::System.Data.DataColumn columnCODCOLIGADA;
            
            private global::System.Data.DataColumn columnNUMERO;
            
            private global::System.Data.DataColumn columnNUMPACIENTE;
            
            private global::System.Data.DataColumn columnCODCLINICA;
            
            private global::System.Data.DataColumn columnDATAINTERNACAO;
            
            private global::System.Data.DataColumn columnDATAALTA;
            
            private global::System.Data.DataColumn columnTIPOSAIDA;
            
            private global::System.Data.DataColumn columnCODESPECIALIDADE;
            
            private global::System.Data.DataColumn columnNOME;
            
            private global::System.Data.DataColumn columnESPECIALIDADE;
            
            private global::System.Data.DataColumn columnUNIDADECLINICA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZJInternacaoDataTable() {
                this.TableName = "SZJInternacao";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SZJInternacaoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SZJInternacaoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODCOLIGADAColumn {
                get {
                    return this.columnCODCOLIGADA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMEROColumn {
                get {
                    return this.columnNUMERO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMPACIENTEColumn {
                get {
                    return this.columnNUMPACIENTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODCLINICAColumn {
                get {
                    return this.columnCODCLINICA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATAINTERNACAOColumn {
                get {
                    return this.columnDATAINTERNACAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATAALTAColumn {
                get {
                    return this.columnDATAALTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIPOSAIDAColumn {
                get {
                    return this.columnTIPOSAIDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODESPECIALIDADEColumn {
                get {
                    return this.columnCODESPECIALIDADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOMEColumn {
                get {
                    return this.columnNOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESPECIALIDADEColumn {
                get {
                    return this.columnESPECIALIDADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UNIDADECLINICAColumn {
                get {
                    return this.columnUNIDADECLINICA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZJInternacaoRow this[int index] {
                get {
                    return ((SZJInternacaoRow)(this.Rows[index]));
                }
            }
            
            public event SZJInternacaoRowChangeEventHandler SZJInternacaoRowChanging;
            
            public event SZJInternacaoRowChangeEventHandler SZJInternacaoRowChanged;
            
            public event SZJInternacaoRowChangeEventHandler SZJInternacaoRowDeleting;
            
            public event SZJInternacaoRowChangeEventHandler SZJInternacaoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSZJInternacaoRow(SZJInternacaoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZJInternacaoRow AddSZJInternacaoRow(short CODCOLIGADA, int NUMERO, int NUMPACIENTE, string CODCLINICA, System.DateTime DATAINTERNACAO, System.DateTime DATAALTA, string TIPOSAIDA, string CODESPECIALIDADE, string NOME, string ESPECIALIDADE, string UNIDADECLINICA) {
                SZJInternacaoRow rowSZJInternacaoRow = ((SZJInternacaoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODCOLIGADA,
                        NUMERO,
                        NUMPACIENTE,
                        CODCLINICA,
                        DATAINTERNACAO,
                        DATAALTA,
                        TIPOSAIDA,
                        CODESPECIALIDADE,
                        NOME,
                        ESPECIALIDADE,
                        UNIDADECLINICA};
                rowSZJInternacaoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSZJInternacaoRow);
                return rowSZJInternacaoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZJInternacaoRow FindByCODCOLIGADANUMERO(short CODCOLIGADA, int NUMERO) {
                return ((SZJInternacaoRow)(this.Rows.Find(new object[] {
                            CODCOLIGADA,
                            NUMERO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SZJInternacaoDataTable cln = ((SZJInternacaoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SZJInternacaoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODCOLIGADA = base.Columns["CODCOLIGADA"];
                this.columnNUMERO = base.Columns["NUMERO"];
                this.columnNUMPACIENTE = base.Columns["NUMPACIENTE"];
                this.columnCODCLINICA = base.Columns["CODCLINICA"];
                this.columnDATAINTERNACAO = base.Columns["DATAINTERNACAO"];
                this.columnDATAALTA = base.Columns["DATAALTA"];
                this.columnTIPOSAIDA = base.Columns["TIPOSAIDA"];
                this.columnCODESPECIALIDADE = base.Columns["CODESPECIALIDADE"];
                this.columnNOME = base.Columns["NOME"];
                this.columnESPECIALIDADE = base.Columns["ESPECIALIDADE"];
                this.columnUNIDADECLINICA = base.Columns["UNIDADECLINICA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODCOLIGADA = new global::System.Data.DataColumn("CODCOLIGADA", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODCOLIGADA);
                this.columnNUMERO = new global::System.Data.DataColumn("NUMERO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERO);
                this.columnNUMPACIENTE = new global::System.Data.DataColumn("NUMPACIENTE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMPACIENTE);
                this.columnCODCLINICA = new global::System.Data.DataColumn("CODCLINICA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODCLINICA);
                this.columnDATAINTERNACAO = new global::System.Data.DataColumn("DATAINTERNACAO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATAINTERNACAO);
                this.columnDATAALTA = new global::System.Data.DataColumn("DATAALTA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATAALTA);
                this.columnTIPOSAIDA = new global::System.Data.DataColumn("TIPOSAIDA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPOSAIDA);
                this.columnCODESPECIALIDADE = new global::System.Data.DataColumn("CODESPECIALIDADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODESPECIALIDADE);
                this.columnNOME = new global::System.Data.DataColumn("NOME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOME);
                this.columnESPECIALIDADE = new global::System.Data.DataColumn("ESPECIALIDADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESPECIALIDADE);
                this.columnUNIDADECLINICA = new global::System.Data.DataColumn("UNIDADECLINICA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIDADECLINICA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODCOLIGADA,
                                this.columnNUMERO}, true));
                this.columnCODCOLIGADA.AllowDBNull = false;
                this.columnNUMERO.AllowDBNull = false;
                this.columnNUMERO.DefaultValue = ((int)(0));
                this.columnCODCLINICA.AllowDBNull = false;
                this.columnNOME.Caption = "Nome do Paciente";
                this.columnNOME.MaxLength = 60;
                this.columnESPECIALIDADE.MaxLength = 40;
                this.columnUNIDADECLINICA.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZJInternacaoRow NewSZJInternacaoRow() {
                return ((SZJInternacaoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SZJInternacaoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SZJInternacaoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SZJInternacaoRowChanged != null)) {
                    this.SZJInternacaoRowChanged(this, new SZJInternacaoRowChangeEvent(((SZJInternacaoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SZJInternacaoRowChanging != null)) {
                    this.SZJInternacaoRowChanging(this, new SZJInternacaoRowChangeEvent(((SZJInternacaoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SZJInternacaoRowDeleted != null)) {
                    this.SZJInternacaoRowDeleted(this, new SZJInternacaoRowChangeEvent(((SZJInternacaoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SZJInternacaoRowDeleting != null)) {
                    this.SZJInternacaoRowDeleting(this, new SZJInternacaoRowChangeEvent(((SZJInternacaoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSZJInternacaoRow(SZJInternacaoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SZJInternacaoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SZJInternacaoRow : global::System.Data.DataRow {
            
            private SZJInternacaoDataTable tableSZJInternacao;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SZJInternacaoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSZJInternacao = ((SZJInternacaoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CODCOLIGADA {
                get {
                    return ((short)(this[this.tableSZJInternacao.CODCOLIGADAColumn]));
                }
                set {
                    this[this.tableSZJInternacao.CODCOLIGADAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NUMERO {
                get {
                    return ((int)(this[this.tableSZJInternacao.NUMEROColumn]));
                }
                set {
                    this[this.tableSZJInternacao.NUMEROColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NUMPACIENTE {
                get {
                    try {
                        return ((int)(this[this.tableSZJInternacao.NUMPACIENTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMPACIENTE\' in table \'SZJInternacao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZJInternacao.NUMPACIENTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODCLINICA {
                get {
                    return ((string)(this[this.tableSZJInternacao.CODCLINICAColumn]));
                }
                set {
                    this[this.tableSZJInternacao.CODCLINICAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATAINTERNACAO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSZJInternacao.DATAINTERNACAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATAINTERNACAO\' in table \'SZJInternacao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZJInternacao.DATAINTERNACAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATAALTA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSZJInternacao.DATAALTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATAALTA\' in table \'SZJInternacao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZJInternacao.DATAALTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPOSAIDA {
                get {
                    try {
                        return ((string)(this[this.tableSZJInternacao.TIPOSAIDAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIPOSAIDA\' in table \'SZJInternacao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZJInternacao.TIPOSAIDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODESPECIALIDADE {
                get {
                    try {
                        return ((string)(this[this.tableSZJInternacao.CODESPECIALIDADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODESPECIALIDADE\' in table \'SZJInternacao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZJInternacao.CODESPECIALIDADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOME {
                get {
                    try {
                        return ((string)(this[this.tableSZJInternacao.NOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOME\' in table \'SZJInternacao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZJInternacao.NOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ESPECIALIDADE {
                get {
                    try {
                        return ((string)(this[this.tableSZJInternacao.ESPECIALIDADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESPECIALIDADE\' in table \'SZJInternacao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZJInternacao.ESPECIALIDADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNIDADECLINICA {
                get {
                    try {
                        return ((string)(this[this.tableSZJInternacao.UNIDADECLINICAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIDADECLINICA\' in table \'SZJInternacao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSZJInternacao.UNIDADECLINICAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNUMPACIENTENull() {
                return this.IsNull(this.tableSZJInternacao.NUMPACIENTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNUMPACIENTENull() {
                this[this.tableSZJInternacao.NUMPACIENTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATAINTERNACAONull() {
                return this.IsNull(this.tableSZJInternacao.DATAINTERNACAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATAINTERNACAONull() {
                this[this.tableSZJInternacao.DATAINTERNACAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATAALTANull() {
                return this.IsNull(this.tableSZJInternacao.DATAALTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATAALTANull() {
                this[this.tableSZJInternacao.DATAALTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIPOSAIDANull() {
                return this.IsNull(this.tableSZJInternacao.TIPOSAIDAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIPOSAIDANull() {
                this[this.tableSZJInternacao.TIPOSAIDAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODESPECIALIDADENull() {
                return this.IsNull(this.tableSZJInternacao.CODESPECIALIDADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODESPECIALIDADENull() {
                this[this.tableSZJInternacao.CODESPECIALIDADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOMENull() {
                return this.IsNull(this.tableSZJInternacao.NOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOMENull() {
                this[this.tableSZJInternacao.NOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESPECIALIDADENull() {
                return this.IsNull(this.tableSZJInternacao.ESPECIALIDADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESPECIALIDADENull() {
                this[this.tableSZJInternacao.ESPECIALIDADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNIDADECLINICANull() {
                return this.IsNull(this.tableSZJInternacao.UNIDADECLINICAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNIDADECLINICANull() {
                this[this.tableSZJInternacao.UNIDADECLINICAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SZJInternacaoRowChangeEvent : global::System.EventArgs {
            
            private SZJInternacaoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZJInternacaoRowChangeEvent(SZJInternacaoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SZJInternacaoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591