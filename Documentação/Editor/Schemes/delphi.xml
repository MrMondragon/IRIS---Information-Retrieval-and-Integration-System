<?xml version="1.0" encoding="utf-8"?>
<LexScheme xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="scheme.xsd">
  <Author>Quantum Whale</Author>
  <Name>Delphi language</Name>
  <Desc>Syntax Scheme for Delphi Language</Desc>
  <Copyright>Copyright Quantum Whale, 2003</Copyright>
  <FileExtension>.pas</FileExtension>
  <FileType>delphi</FileType>
  <Version>1.1</Version>
  <Styles>
    <Style>
      <Name>idents</Name>
      <ForeColor>ControlText</ForeColor>
      <Index>0</Index>
    </Style>
    <Style>
      <Name>numbers</Name>
      <ForeColor>Green</ForeColor>
      <Index>1</Index>
    </Style>
    <Style>
      <Name>reswords</Name>
      <ForeColor>Blue</ForeColor>
      <FontStyle>Bold</FontStyle>
      <Index>2</Index>
    </Style>
    <Style>
      <Name>comments</Name>
      <ForeColor>Silver</ForeColor>
      <FontStyle>Italic</FontStyle>
      <Index>3</Index>
      <PlainText>true</PlainText>
    </Style>
    <Style>
      <Name>whitespace</Name>
      <Index>4</Index>
    </Style>
    <Style>
      <Name>strings</Name>
      <ForeColor>Maroon</ForeColor>
      <Index>5</Index>
    </Style>
  </Styles>
  <States>
    <State>
      <Name>normal</Name>
      <CaseSensitive>false</CaseSensitive>
      <SyntaxBlocks>
        <SyntaxBlock>
          <Name>idents</Name>
          <LexStyle>0</LexStyle>
          <LeaveState>0</LeaveState>
          <ResWordSets>
            <ResWordSet>
              <Name />
              <Index>0</Index>
              <ResWordStyle>2</ResWordStyle>
              <ResWords>
                <word>string</word>
                <word>var</word>
                <word>do</word>
                <word>constructor</word>
                <word>procedure</word>
                <word>inline</word>
                <word>else</word>
                <word>break</word>
                <word>writeonly</word>
                <word>while</word>
                <word>until</word>
                <word>end</word>
                <word>resourcestring</word>
                <word>except</word>
                <word>raise</word>
                <word>continue</word>
                <word>is</word>
                <word>try</word>
                <word>type</word>
                <word>record</word>
                <word>absolute</word>
                <word>overload</word>
                <word>uses</word>
                <word>export</word>
                <word>set</word>
                <word>if</word>
                <word>near</word>
                <word>as</word>
                <word>asm</word>
                <word>exports</word>
                <word>in</word>
                <word>message</word>
                <word>finalization</word>
                <word>virtual</word>
                <word>program</word>
                <word>resident</word>
                <word>class</word>
                <word>read</word>
                <word>case</word>
                <word>of</word>
                <word>div</word>
                <word>destructor</word>
                <word>nil</word>
                <word>file</word>
                <word>begin</word>
                <word>published</word>
                <word>object</word>
                <word>shl</word>
                <word>repeat</word>
                <word>dispid</word>
                <word>shr</word>
                <word>default</word>
                <word>external</word>
                <word>readonly</word>
                <word>for</word>
                <word>cdecl</word>
                <word>protected</word>
                <word>inherited</word>
                <word>xor</word>
                <word>public</word>
                <word>goto</word>
                <word>property</word>
                <word>library</word>
                <word>finally</word>
                <word>forward</word>
                <word>packed</word>
                <word>out</word>
                <word>not</word>
                <word>abstract</word>
                <word>initialization</word>
                <word>automated</word>
                <word>label</word>
                <word>stringresource</word>
                <word>private</word>
                <word>pascal</word>
                <word>then</word>
                <word>far</word>
                <word>write</word>
                <word>const</word>
                <word>with</word>
                <word>safecall</word>
                <word>to</word>
                <word>nodefault</word>
                <word>reintroduce</word>
                <word>array</word>
                <word>interface</word>
                <word>stdcall</word>
                <word>function</word>
                <word>assembler</word>
                <word>stored</word>
                <word>dispinterface</word>
                <word>dynamic</word>
                <word>mod</word>
                <word>index</word>
                <word>exit</word>
                <word>and</word>
                <word>downto</word>
                <word>threadvar</word>
                <word>register</word>
                <word>override</word>
                <word>or</word>
                <word>unit</word>
                <word>implementation</word>
              </ResWords>
            </ResWordSet>
          </ResWordSets>
          <Expressions>
            <string>[a-zA-Z_][a-zA-Z0-9_]*</string>
          </Expressions>
          <Index>0</Index>
        </SyntaxBlock>
        <SyntaxBlock>
          <Name>comment1</Name>
          <LexStyle>3</LexStyle>
          <LeaveState>0</LeaveState>
          <Expressions>
            <string>//.*</string>
          </Expressions>
          <Index>1</Index>
        </SyntaxBlock>
        <SyntaxBlock>
          <Name>comment2</Name>
          <LexStyle>3</LexStyle>
          <LeaveState>1</LeaveState>
          <Expressions>
            <string>\{</string>
          </Expressions>
          <Index>2</Index>
        </SyntaxBlock>
        <SyntaxBlock>
          <Name>comment3</Name>
          <LexStyle>3</LexStyle>
          <LeaveState>2</LeaveState>
          <Expressions>
            <string>\(\*</string>
          </Expressions>
          <Index>3</Index>
        </SyntaxBlock>
        <SyntaxBlock>
          <Name>numbers</Name>
          <LexStyle>1</LexStyle>
          <LeaveState>0</LeaveState>
          <Expressions>
            <string>([0-9]+\.[0-9]*(e|E)(\+|\-)?[0-9]+)|([0-9]+\.[0-9]*)|($[0-9a-fA-F]+)|([0-9]+)</string>
          </Expressions>
          <Index>4</Index>
        </SyntaxBlock>
        <SyntaxBlock>
          <Name>string</Name>
          <LexStyle>5</LexStyle>
          <LeaveState>0</LeaveState>
          <Expressions>
            <string>'[^']*'</string>
          </Expressions>
          <Index>5</Index>
        </SyntaxBlock>
        <SyntaxBlock>
          <Name>whitespace</Name>
          <LexStyle>4</LexStyle>
          <LeaveState>0</LeaveState>
          <Expressions>
            <string>(\s)*</string>
          </Expressions>
          <Index>6</Index>
        </SyntaxBlock>
      </SyntaxBlocks>
      <Index>0</Index>
    </State>
    <State>
      <Name>comment1</Name>
      <CaseSensitive>false</CaseSensitive>
      <SyntaxBlocks>
        <SyntaxBlock>
          <Name>comment11</Name>
          <LexStyle>3</LexStyle>
          <LeaveState>0</LeaveState>
          <Expressions>
            <string>\}</string>
          </Expressions>
          <Index>0</Index>
        </SyntaxBlock>
        <SyntaxBlock>
          <Name>comment12</Name>
          <LexStyle>3</LexStyle>
          <LeaveState>1</LeaveState>
          <Expressions>
            <string>[^\}]+</string>
          </Expressions>
          <Index>1</Index>
        </SyntaxBlock>
      </SyntaxBlocks>
      <Index>1</Index>
    </State>
    <State>
      <Name>comment2</Name>
      <CaseSensitive>false</CaseSensitive>
      <SyntaxBlocks>
        <SyntaxBlock>
          <Name>comment21</Name>
          <LexStyle>3</LexStyle>
          <LeaveState>0</LeaveState>
          <Expressions>
            <string>\*\)</string>
          </Expressions>
          <Index>0</Index>
        </SyntaxBlock>
        <SyntaxBlock>
          <Name>comment22</Name>
          <LexStyle>3</LexStyle>
          <LeaveState>2</LeaveState>
          <Expressions>
            <string>((?!\*\)).)+</string>
          </Expressions>
          <Index>1</Index>
        </SyntaxBlock>
      </SyntaxBlocks>
      <Index>2</Index>
    </State>
  </States>
</LexScheme>