"Name"    = XEval Langguage
"Author"  = Marcelo R. Andrade
"Version" = 1.0
"About"   = This grammar combines basic operation parsing with both scalar and dataset functions

"Case Sensitive" = False 
"Start Symbol"   = <Expression>

!-------------------Terminals
{String Ch}      = {Printable} - ["] + {Printable Extended} 
{Id Ch}   = {Alphanumeric} + [_]

String   = '"'{String Ch}*'"'
Number   = {Digit}+'.'{Digit}+ |{Digit}+
Id       = {Letter}{Id Ch}*
Dd      = {Digit}{Digit}
Yy      = {Digit}{Digit}{Digit}{Digit} | Dd

!--------------------Base Precedence

<Expression>  ::= <And Exp> OR <Expression>
                | <And Exp>
                |

<And Exp>     ::= <Not Exp> AND <And Exp>
                | <Not Exp>

<Not Exp>     ::= NOT <Pred Exp>
                | <Pred Exp>

<Pred Exp>    ::= <Add Exp> BETWEEN <Add Exp> AND <Add Exp>
                | <Value> IS NOT NULL
                | <Value> IS NULL
                | <Add Exp> LIKE String
                | <Add Exp> '=='  <Add Exp>
                | <Add Exp> '<>' <Add Exp>
                | <Add Exp> '!=' <Add Exp>
                | <Add Exp> '>'  <Add Exp>
                | <Add Exp> '>=' <Add Exp>
                | <Add Exp> '<'  <Add Exp>
                | <Add Exp> '<=' <Add Exp>
                | <Add Exp>

<Add Exp>     ::= <Add Exp> '+' <Mult Exp>
                | <Add Exp> '-' <Mult Exp>
                | <Mult Exp>

<Mult Exp>    ::= <Mult Exp> '*' <Negate Exp>
                | <Mult Exp> '/' <Negate Exp>
                | <Mult Exp> '%' <Negate Exp>
                | <Negate Exp>

<Negate Exp>  ::= '-' <Value>
                | <Value>

<Value>       ::= Number
                | Dd
                | Yy
                | String
                | <Var>
                | <Function>
                | <Date>
                | '('<Expression>')'

<Var>           ::=  <External Var>
                    |<DataTable>
                    |<DataField>
                    |<External Param>


<External Var>     ::= '@'Id
<DataTable>        ::= '#'Id
<DataField>        ::= <DataTable>'['Number']''['id']'
                   | <DataTable>'['<External Var>']''['id']'
<External Param>   ::= '&'Id


<Date>           ::= Date'('Dd'/'Dd'/'Yy')'
                    | Today
                    | Now

!-----------------------Functions and Rules


<Function>      ::= Count  '('<DataTable>','Id ')'
                  | Avg    '('<DataTable>','Id ')'
                  | Min    '('<DataTable>','Id')'
                  | Max    '('<DataTable>','Id ')'
                  | Sum    '('<DataTable>','Id')'
                  | CountDistinct  '('<DataTable>','Id ')'
                  | AvgDistinct    '('<DataTable>','Id ')'
                  | SumDistinct    '('<DataTable>','Id')'
                  | Count  '('<DataTable>','Id',' String ')'
                  | Avg    '('<DataTable>','Id','  String ')'
                  | Min    '('<DataTable>','Id','  String ')'
                  | Max    '('<DataTable>','Id','  String ')'
                  | Sum    '('<DataTable>','Id','  String ')'
                  | CountDistinct  '('<DataTable>','Id',' String ')'
                  | AvgDistinct    '('<DataTable>','Id','  String ')'
                  | SumDistinct    '('<DataTable>','Id','  String ')'
                  | Substring  '('<Value>','Number','Number')'
                  | RequestObject'('Id')'
                  | <Var>'['Number']'
                  | <Var>'['Number','Number']'

