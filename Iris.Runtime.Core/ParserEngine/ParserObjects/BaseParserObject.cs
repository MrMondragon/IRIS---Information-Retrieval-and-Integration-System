///////////////////////////////////////////////////////////
//  BaseQueryObject.cs
//  Implementation of the Class BaseQueryObject
//  Generated by Enterprise Architect
//  Created on:      04-Jan-2007 21:41:42
//  Original author: Marcelo
///////////////////////////////////////////////////////////




using System;
using System.Collections.Generic;
using System.ComponentModel;
namespace Iris.Runtime.Core.ParserObjects
{
  /// <summary>
  /// Ancestral abstrato comum a todos os objetos que compõem a query
  /// </summary>
  [Serializable]
  public abstract class BaseParserObject
  {

    public BaseParserObject()
    {
      parameters = new Dictionary<string, object>();
    }

    /// <summary>
    /// Retorna o texto correspondente ao objeto
    /// </summary>
    /// <returns></returns>
    public abstract string GetText();

    /// <summary>
    /// Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
    /// </summary>
    /// <returns>
    /// A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
    /// </returns>
    public override string ToString()
    {
      return GetText();
    }

    private Dictionary<string, object> parameters;
    [Browsable(false)]
    public Dictionary<string, object> Parameters
    {
      get { return parameters; }
      set { parameters = value; }
    }
    
    public virtual void Clear()
    {
      parameters.Clear();
    }
  }//end BaseQueryObject

}//end namespace Parser